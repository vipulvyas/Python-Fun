<---------------------------------------------------------------------------------------->
1.fast exponential

#include<stdio.h>
#include<stdlib.h>
void main()
{
	int a,b,i=0,y=1,nb,n;
	printf("Enter n:");
	scanf("%d",&a);
	printf("Enter x:");
	scanf("%d",&b);
	printf("Enter m:");
	scanf("%d",&n);	
	while(b>0)
	{
		nb=b&1;
		if(nb==1)
			y=a*y%n;
		a=a*a%n;
		b=b>>1;
	}
	printf("%d",y);
}


<--------------------------------------------------------------------------------------->

2.Miller Rabin
#include<stdio.h>
#include<stdlib.h>

int fastexpo(int a,int b,int n)
{
	int nb,y=1;
	while(b>0)
	{
		nb=b&1;
		if(nb==1)
			y=a*y%n;
		a=a*a%n;
		b=b>>1;
	}
	return y;
}

void main()
{
	int m,k=0,n,i,a=2,t;
	printf("Enter Number::");
	scanf("%d",&n);
	m=n;
	m--;
	while(m%2==0)
	{
		m=m/2;
		k++;
	}
	t=fastexpo(a,m,n);
	if(t==1 || t==n+1 || t==n-1 || t==-1)
	{
		printf("Prime");
		exit(0);
	}
	for(i=0;i<k;i++)
	{	
		t=t*t%n;
		if(t==1 || t==n+1)
		{
			printf("Composite");
			exit(0);
		}
		if(t==-1 || t==n-1)
		{
			printf("Prime");
			exit(0);
		}	
	}
	printf("Composite");
}
<------------------------------------------------------------------------------------->

3. Afine Attack




#include<stdio.h>
#include<stdlib.h>

int multi_inverse(int n,int a)
{
	int r1=n,r2=a,t1=0,t2=1,r,t,q;
	while(r2>0)
	{
		q=r1/r2;
		r=r1-q*r2;
		r1=r2;
		r2=r;
		t=t1-q*t2;
		t1=t2;
		t2=t;
	}	
	if(r1==1)
		if(t1<0)
			return t1+26;
		else
			return t1;
}

int check(int a,int b)
{
	int r1=a,r2=b,q,r;
	while(r2>0)
	{
		q=r1/r2;
		r=r1-q*r2;
		r1=r2;
		r2=r;
	}
	if(r1==1)
		return 1;
	else
		return 0;
}

void main()
{
	char p[2],cr[2];
	printf("Enter Plain Text");
	scanf("%s",p);
	printf("Enter Cipher Text");
	scanf("%s",cr);
	int a,b,c,d,k1,k;
	a=p[0]-97;
	if(a<0)
		a+=32;
	b=p[1]-97;
	if(b<0)
		b+=32;
	c=cr[0]-97;
	if(c<0)
		c+=32;
	d=cr[1]-97;
	if(d<0)
		d+=32;
	a=a-b;
	if(a<0)
		a+=26;
	c=c-d;
	if(c<0)
		c+=26;
	k=multi_inverse(26,a);
	k1=c*k%26;
	if(check(k1,26)==1)
		printf("Yes");
	else
		printf("No");
}
<----------------------------------------------------------------------------------------------->


